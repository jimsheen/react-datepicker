{"version":3,"sources":["utils/calendarHelper/index.js","components/Chevron/Chevron.js","components/Calendar/CalendarDays/CalendarDays.js","components/Calendar/Calendar.js","components/DatePicker/DatePicker.js","App.js","index.js"],"names":["WEEK_DAYS","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","CALENDAR_MONTHS","January","February","March","April","May","June","July","August","September","October","November","December","CALENDAR_MONTHS_30","isDate","date","Object","prototype","toString","call","isValidDate","Number","isNaN","getDateISO","Date","getFullYear","getMonth","getDate","map","v","String","padStart","join","getDateArray","split","year","month","day","isLeapYear","getMonthDays","includes","getMonthFirstDay","setDate","getDay","getPreviousMonth","getNextMonth","dateDiff","date1","date2","setHours","monthDays","monthFirstDay","daysFromPrevMonth","daysFromNextMonth","CALENDAR_WEEKS","prevMonth","prevMonthYear","nextMonth","nextMonthYear","prevMonthDays","prevMonthDates","Array","n","index","thisMonthDates","nextMonthDates","right","left","down","up","className","classNames","data","handleClick","selectedDates","isInRange","length","currentDate","btnClass","item","indexOf","entries","key","onClick","Calendar","today","React","useState","calendarHelper","calendarData","setCalendarData","setNewDate","useEffect","keys","CalendarDays","fromDate","setFromDate","toDate","setToDate","calendarOpen","setCalendarOpen","setselectedDates","dayDiff","setDayDiff","isLoading","fact","setFact","leapYear","some","startDate","axios","get","then","res","htmlFor","type","value","readOnly","onFocus","Fragment","datesSet","newDate","Math","round","days","ndays","reduce","a","b","floor","getCertainDays","App","DatePicker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5027e27e.chunk.js","sourcesContent":["export const WEEK_DAYS = {\n  Sunday: \"Sun\",\n  Monday: \"Mon\",\n  Tuesday: \"Tue\",\n  Wednesday: \"Wed\",\n  Thursday: \"Thu\",\n  Friday: \"Fri\",\n  Saturday: \"Sat\"\n}\n\nexport const CALENDAR_MONTHS = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n}\n\nexport const CALENDAR_WEEKS = 6;\n\nexport const CALENDAR_MONTHS_30 = [4, 6, 9, 11];\n\nexport const isDate = date => {\n  const isDate = Object.prototype.toString.call(date) === '[object Date]';\n  const isValidDate = date && !Number.isNaN(+date);\n  return isDate && isValidDate;\n}\n\nexport const getDateISO = (date = new Date()) => {\n  return isDate(date) ?\n    [date.getFullYear(), date.getMonth() + 1, date.getDate()]\n    .map(v => String(v).padStart(2, '0'))\n    .join('-') :\n    null;\n}\n\nexport const getDateArray = (date = new Date()) => {\n  const [year = null, month = null, day = null] = (getDateISO(date) || '').split('-').map(v => +v);\n  return [year, month, day];\n}\n\nexport const isLeapYear = year => year % 4 === 0;\n\nexport const getMonthDays = (date = new Date()) => {\n  const [year, month] = getDateArray(date);\n  return month === 2 ?\n    isLeapYear(year) ? 29 : 28 :\n    (CALENDAR_MONTHS_30.includes(month)) ? 30 : 31;\n}\n\nexport const getMonthFirstDay = (date = new Date()) => {\n  return new Date(new Date(+date).setDate(1)).getDay() + 1;\n}\n\nexport const getPreviousMonth = (date = new Date()) => {\n  const [year, month] = getDateArray(date);\n  return {\n    month: month > 1 ? month - 1 : 12,\n    year: month > 1 ? year : year - 1\n  }\n}\n\nexport const getNextMonth = (date = new Date()) => {\n  const [year, month] = getDateArray(date);\n  return {\n    month: month < 12 ? month + 1 : 1,\n    year: month < 12 ? year : year + 1,\n  };\n}\n\nexport const dateDiff = (date1, date2 = new Date()) => {\n  return isDate(date1) && isDate(date2) ?\n    (new Date(+date1).setHours(0, 0, 0, 0)) - (new Date(+date2).setHours(0, 0, 0, 0)) :\n    null;\n}\n\nexport const isBeforeDay = (date1, date2) => +dateDiff(date1, date2) < 0\n\nexport const isAfterDay = (date1, date2) => +dateDiff(date1, date2) > 0\n\nexport const isSameDay = (date1, date2) => dateDiff(date1, date2) === 0\n\nexport const isSameMonth = (date1, date2) => {\n  return isDate(date1) && isDate(date2) ?\n    new Date(+date1).setDate(1) - new Date(+date2).setDate(1) === 0 :\n    false;\n}\n\nexport default (date = new Date()) => {\n  const monthDays = getMonthDays(date);\n  const monthFirstDay = getMonthFirstDay(date);\n  const [year, month] = getDateArray(date);\n\n  const daysFromPrevMonth = monthFirstDay - 1;\n  const daysFromNextMonth = (CALENDAR_WEEKS * 7) - (daysFromPrevMonth + monthDays);\n\n  const { month: prevMonth, year: prevMonthYear } = getPreviousMonth(date);\n  const { month: nextMonth, year: nextMonthYear } = getNextMonth(date);\n\n  const prevMonthDays = getMonthDays(new Date([prevMonthYear, prevMonth]));\n\n  const prevMonthDates = [...new Array(daysFromPrevMonth)]\n    .map((n, index) => [prevMonthYear, prevMonth, index + 1 + (prevMonthDays - daysFromPrevMonth)]);\n\n  const thisMonthDates = [...new Array(monthDays)]\n    .map((n, index) => [year, month, index + 1]);\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)]\n    .map((n, index) => [nextMonthYear, nextMonth, index + 1]);\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n}","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Chevron.css'\n\nexport default ({ right, left, down, up }) => {\n\tconst className = classNames('chevron', {\n\t\t'right': right,\n\t\t'left': left,\n\t\t'down': down,\n\t\t'up': up\n\t})\n\treturn (\n\t\t<i className={className}></i>\n\t)\n}","import React from 'react';\nimport classNames from 'classnames';\n\nimport {\n  WEEK_DAYS\n} from '../../../utils/calendarHelper';\n\nexport default ({\n  data = [],\n  handleClick,\n  selectedDates = [],\n  date,\n}) => {\n\n  const isInRange = day => {\n    if (selectedDates.length === 2) {\n      const currentDate = new Date(day);\n      const date1 = new Date(selectedDates[0]);\n      const date2 = new Date(selectedDates[1]);\n      if (currentDate > date1 && currentDate < date2) {\n        return true;\n      }\n    }\n  }\n\n  const btnClass = day => {\n    const currentDate = new Date(day).toString();\n    const className = classNames('day', {\n      'selected': selectedDates.map(item => item.toString()).indexOf(currentDate) !== -1,\n      'between': isInRange(day),\n      'outside': day[1] !== date[1]\n    })\n\n    return className;\n  }\n\n  return (\n    <div className=\"calendar-days\">\n      {Object.entries(WEEK_DAYS).map(([k, v]) => (\n        <div key={v}>{v}</div>\n      ))}\n      {data.map(item => (\n        <button\n          key={item.toString()} \n          onClick={() => handleClick(item)} \n          className={btnClass(item)}\n        >\n          {item[2]}\n        </button>\n      ))}\n    </div>\n  )\n}","import React from 'react';\n\nimport calendarHelper, {\n  CALENDAR_MONTHS,\n  getDateArray,\n  getNextMonth,\n  getPreviousMonth\n} from '../../utils/calendarHelper';\nimport Chevron from '../Chevron';\nimport CalendarDays from './CalendarDays';\nimport './Calendar.css';\n\nconst Calendar = ({ handleClick, selectedDates }) => {\n\n  const today = new Date();\n  const [calendarData, setCalendarData] = React.useState(calendarHelper());\n  const [date, setNewDate] = React.useState(getDateArray(today));\n  // const [dayDiff, setDayDiff] = React.useState(0);\n  // const [selectedDates, setselectedDates] = React.useState([])\n  const [year, month] = date;\n\n  const gotoNextMonth = () => {\n    const nextMonth = getNextMonth(new Date([year, month]));\n    setNewDate([nextMonth.year, nextMonth.month, 1])\n  }\n\n  const gotoPrevMonth = () => {\n    const prevMonth = getPreviousMonth(new Date([year, month]));\n    setNewDate([prevMonth.year, prevMonth.month, 1])\n  }\n\n  React.useEffect(() => {\n    setCalendarData(calendarHelper(new Date(date)))\n  }, [date])\n\n  return (\n    <div className=\"calendar\">\n\t\t\t<div className=\"calendar-month\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"prev-month\"\n\t\t\t\t\tonClick={gotoPrevMonth}\n\t\t\t\t>\n\t\t\t\t\t<Chevron left />\n\t\t\t\t</button>\n\t\t\t\t{Object.keys(CALENDAR_MONTHS)[month - 1]} {year}\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"next-month\"\n\t\t\t\t\tonClick={gotoNextMonth}\n\t\t\t\t>\n\t\t\t\t\t<Chevron right />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<CalendarDays\n\t\t\t\tdate={date}\n\t\t\t\tdata={calendarData} \n\t\t\t\thandleClick={handleClick} \n\t\t\t\tselectedDates={selectedDates}\n\t\t\t/>\n\t\t</div>\n  )\n}\n\nexport default Calendar","import React from 'react';\nimport axios from 'axios';\n\nimport {\n  getDateArray,\n  isBeforeDay,\n  dateDiff,\n  getDateISO,\n  isLeapYear\n} from '../../utils/calendarHelper';\n\nimport Calendar from '../Calendar';\n\nexport default () => {\n\n  const [fromDate, setFromDate] = React.useState('');\n  const [toDate, setToDate] = React.useState('');\n  const [calendarOpen, setCalendarOpen] = React.useState(false)\n  const [selectedDates, setselectedDates] = React.useState([])\n  const [dayDiff, setDayDiff] = React.useState(0);\n  const [fact, setFact] = React.useState({\n  \tisLoading: false,\n  \tdata: ''\n  });\n\n  const handleClick = date => {\n    const datesSet = selectedDates.length === 2;\n    const newDate = new Date(date);\n    if (!selectedDates[0] || datesSet) {\n      setselectedDates([newDate]);\n      setFromDate(getDateISO(new Date(date)))\n    } else {\n      if (isBeforeDay(newDate, selectedDates[0])) {\n        if (datesSet) {\n          setselectedDates([newDate, selectedDates[1]]);\n          setFromDate(getDateISO(new Date(date)))\n        } else {\n          setselectedDates([newDate]);\n          setFromDate(getDateISO(new Date(date)))\n        }\n      } else {\n        setselectedDates([selectedDates[0], newDate])\n        setToDate(getDateISO(new Date(date)));\n        setDayDiff(Math.round(dateDiff(newDate, selectedDates[0]) / (1000 * 3600 * 24)));\n      }\n    }\n  }\n\n  const leapYear = selectedDates.length === 2 &&\n    selectedDates.some(date => isLeapYear(getDateArray(date)[0]))\n\n  const getCertainDays = (days, date1, date2) => {\n    const ndays = 1 + Math.round((date2 - date1) / (24 * 3600 * 1000));\n    const sum = (a, b) => a + Math.floor((ndays + (date1.getDay() + 6 - b) % 7) / 7);\n    return days.reduce(sum, 0);\n  }\n\n  React.useEffect(() => {\n  \tif (fromDate) {\n  \t\tconst startDate = getDateArray(new Date(fromDate))\n  \t\tsetFact({\n  \t\t\tisLoading: true,\n  \t\t})\n  \t\taxios.get(`http://numbersapi.com/${startDate[1]}/${startDate[2]}/date`).then(res =>\n  \t\t\tsetFact({\n  \t\t\t\tdata: res.data,\n  \t\t\t\tisLoading: false,\n  \t\t\t}));\n  \t}\n  }, [fromDate])\n\n  return (\n    <div className=\"date-picker\">\n\t\t\t<label htmlFor=\"from\">From</label>\n\t\t\t<input \n\t\t\t\ttype=\"date\" \n\t\t\t\tvalue={fromDate} \n\t\t\t\treadOnly\n\t\t\t\tonFocus={() => setCalendarOpen(true)}\n\t\t\t/>\n\t\t\t<label htmlFor=\"from\">To</label>\n\t\t\t<input \n\t\t\t\ttype=\"date\" \n\t\t\t\tvalue={toDate} \n\t\t\t\treadOnly\n\t\t\t\tonFocus={() => setCalendarOpen(true)}\n\t\t\t/>\n\t\t\t{calendarOpen &&\n\t\t\t\t<React.Fragment>\n\t\t\t\t<Calendar \n\t\t\t\t\thandleClick={handleClick} \n\t\t\t\t\tselectedDates={selectedDates} \n\t\t\t\t\tfromDate={fromDate}\n\t\t\t\t/>\n\t\t\t\t<p>Days in range: {dayDiff}</p> \n\t\t\t\t<p>Selected dates in leap year {leapYear ? 'Yes' : 'No'}</p>\n\t\t\t\t<p>Mondays in range: {getCertainDays([1],new Date(selectedDates[0]),new Date(selectedDates[1]))}</p>\n\t\t\t\t{fact.isLoading && fromDate &&\n\t\t\t\t\t<p>Loading fact for day...</p>\n\t\t\t\t}\n\t\t\t\t{!fact.isLoading &&\n\t\t\t\t\t<p>{fact.data}</p>\n\t\t\t\t}\n\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t</div>\n  )\n}","import React from 'react';\nimport DatePicker from './components/DatePicker' \n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <DatePicker />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}