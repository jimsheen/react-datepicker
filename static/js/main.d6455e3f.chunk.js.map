{"version":3,"sources":["utils/calendarHelper/index.js","components/FactForDate/FactForDate.js","components/Chevron/Chevron.js","components/Calendar/CalendarDays/CalendarDays.js","components/Calendar/Calendar.js","components/DatePicker/DatePicker.js","App.js","index.js"],"names":["WEEK_DAYS","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","CALENDAR_MONTHS","January","February","March","April","May","June","July","August","September","October","November","December","CALENDAR_MONTHS_30","isDate","date","Object","prototype","toString","call","isValidDate","Number","isNaN","getDateISO","Date","getFullYear","getMonth","getDate","map","v","String","padStart","join","getDateArray","split","year","month","day","isLeapYear","getMonthDays","includes","getMonthFirstDay","setDate","getDay","getPreviousMonth","getNextMonth","dateDiff","date1","date2","setHours","monthDays","monthFirstDay","daysFromPrevMonth","daysFromNextMonth","CALENDAR_WEEKS","prevMonth","prevMonthYear","nextMonth","nextMonthYear","prevMonthDays","prevMonthDates","Array","n","index","thisMonthDates","nextMonthDates","fromDate","React","useState","isLoading","data","error","fact","setFact","useEffect","startDate","axios","get","then","res","catch","Fragment","right","left","down","up","className","classNames","handleClick","selectedDates","isInRange","length","currentDate","btnClass","item","indexOf","entries","key","onClick","Calendar","today","calendarHelper","calendarData","setCalendarData","setNewDate","keys","CalendarDays","setFromDate","toDate","setToDate","calendarOpen","setCalendarOpen","setselectedDates","dayDiff","setDayDiff","leapYear","some","htmlFor","type","value","readOnly","onFocus","datesSet","newDate","Math","round","days","ndays","reduce","a","b","floor","getCertainDays","FactForDate","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6455e3f.chunk.js","sourcesContent":["export const WEEK_DAYS = {\n  Sunday: \"Sun\",\n  Monday: \"Mon\",\n  Tuesday: \"Tue\",\n  Wednesday: \"Wed\",\n  Thursday: \"Thu\",\n  Friday: \"Fri\",\n  Saturday: \"Sat\"\n}\n\nexport const CALENDAR_MONTHS = {\n  January: \"Jan\",\n  February: \"Feb\",\n  March: \"Mar\",\n  April: \"Apr\",\n  May: \"May\",\n  June: \"Jun\",\n  July: \"Jul\",\n  August: \"Aug\",\n  September: \"Sep\",\n  October: \"Oct\",\n  November: \"Nov\",\n  December: \"Dec\"\n}\n\nexport const CALENDAR_WEEKS = 6;\n\nexport const CALENDAR_MONTHS_30 = [4, 6, 9, 11];\n\nexport const isDate = date => {\n  const isDate = Object.prototype.toString.call(date) === '[object Date]';\n  const isValidDate = date && !Number.isNaN(+date);\n  return isDate && isValidDate;\n}\n\nexport const getDateISO = (date = new Date()) => {\n  return isDate(date) ?\n    [date.getFullYear(), date.getMonth() + 1, date.getDate()]\n    .map(v => String(v).padStart(2, '0'))\n    .join('-') :\n    null;\n}\n\nexport const getDateArray = (date = new Date()) => {\n  const [year = null, month = null, day = null] = (getDateISO(date) || '').split('-').map(v => +v);\n  return [year, month, day];\n}\n\nexport const isLeapYear = year => year % 4 === 0;\n\nexport const getMonthDays = (date = new Date()) => {\n  const [year, month] = getDateArray(date);\n  return month === 2 ?\n    isLeapYear(year) ? 29 : 28 :\n    (CALENDAR_MONTHS_30.includes(month)) ? 30 : 31;\n}\n\nexport const getMonthFirstDay = (date = new Date()) => {\n  return new Date(new Date(+date).setDate(1)).getDay() + 1;\n}\n\nexport const getPreviousMonth = (date = new Date()) => {\n  const [year, month] = getDateArray(date);\n  return {\n    month: month > 1 ? month - 1 : 12,\n    year: month > 1 ? year : year - 1\n  }\n}\n\nexport const getNextMonth = (date = new Date()) => {\n  const [year, month] = getDateArray(date);\n  return {\n    month: month < 12 ? month + 1 : 1,\n    year: month < 12 ? year : year + 1,\n  };\n}\n\nexport const dateDiff = (date1, date2 = new Date()) => {\n  return isDate(date1) && isDate(date2) ?\n    (new Date(+date1).setHours(0, 0, 0, 0)) - (new Date(+date2).setHours(0, 0, 0, 0)) :\n    null;\n}\n\nexport const isBeforeDay = (date1, date2) => +dateDiff(date1, date2) < 0\n\nexport const isAfterDay = (date1, date2) => +dateDiff(date1, date2) > 0\n\nexport const isSameDay = (date1, date2) => dateDiff(date1, date2) === 0\n\nexport const isSameMonth = (date1, date2) => {\n  return isDate(date1) && isDate(date2) ?\n    new Date(+date1).setDate(1) - new Date(+date2).setDate(1) === 0 :\n    false;\n}\n\nexport default (date = new Date()) => {\n  const monthDays = getMonthDays(date);\n  const monthFirstDay = getMonthFirstDay(date);\n  const [year, month] = getDateArray(date);\n\n  const daysFromPrevMonth = monthFirstDay - 1;\n  const daysFromNextMonth = (CALENDAR_WEEKS * 7) - (daysFromPrevMonth + monthDays);\n\n  const { month: prevMonth, year: prevMonthYear } = getPreviousMonth(date);\n  const { month: nextMonth, year: nextMonthYear } = getNextMonth(date);\n\n  const prevMonthDays = getMonthDays(new Date([prevMonthYear, prevMonth]));\n\n  const prevMonthDates = [...new Array(daysFromPrevMonth)]\n    .map((n, index) => [prevMonthYear, prevMonth, index + 1 + (prevMonthDays - daysFromPrevMonth)]);\n\n  const thisMonthDates = [...new Array(monthDays)]\n    .map((n, index) => [year, month, index + 1]);\n\n  const nextMonthDates = [...new Array(daysFromNextMonth)]\n    .map((n, index) => [nextMonthYear, nextMonth, index + 1]);\n\n  return [...prevMonthDates, ...thisMonthDates, ...nextMonthDates];\n}","import React from 'react';\nimport axios from 'axios';\n\nimport { getDateArray } from '../../utils/calendarHelper';\n\nexport default ({ fromDate }) => {\n\n  const [fact, setFact] = React.useState({\n    isLoading: false,\n    data: '',\n    error: null,\n  });\n\n  React.useEffect(() => {\n    if (fromDate) {\n      const startDate = getDateArray(new Date(fromDate))\n      setFact({\n        isLoading: true,\n      });\n\n      axios.get(`http://numbersapi.com/${startDate[1]}/${startDate[2]}/date`)\n        .then(res =>\n          setFact({\n            data: res.data,\n            isLoading: false,\n          }))\n        .catch(error => {\n          setFact({\n            data: null,\n            isLoading: false,\n            error\n          })\n        });\n    }\n  }, [fromDate])\n\n\n  return (\n  \t<React.Fragment>\n  \t\t{fact.isLoading && fromDate &&\n\t\t\t\t<p>Loading fact for day...</p>\n\t\t\t}\n\t\t\t{!fact.isLoading &&\n\t\t\t\t<p>{fact.data}</p>\n\t\t\t}\n\t\t\t{fact.error && !fact.isLoading &&\n\t\t\t\t<p>Error fetching data for date</p>\n\t\t\t}\n\t\t</React.Fragment>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\nimport './Chevron.css'\n\nexport default ({ right, left, down, up }) => {\n\tconst className = classNames('chevron', {\n\t\t'right': right,\n\t\t'left': left,\n\t\t'down': down,\n\t\t'up': up\n\t})\n\treturn (\n\t\t<i className={className}></i>\n\t)\n}","import React from 'react';\nimport classNames from 'classnames';\n\nimport {\n  WEEK_DAYS\n} from '../../../utils/calendarHelper';\n\nexport default ({\n  data = [],\n  handleClick,\n  selectedDates = [],\n  date,\n}) => {\n\n  const isInRange = day => {\n    if (selectedDates.length === 2) {\n      const currentDate = new Date(day);\n      const date1 = new Date(selectedDates[0]);\n      const date2 = new Date(selectedDates[1]);\n      if (currentDate > date1 && currentDate < date2) {\n        return true;\n      }\n    }\n  }\n\n  const btnClass = day => {\n    const currentDate = new Date(day).toString();\n    const className = classNames('day', {\n      'selected': selectedDates.map(item => item.toString()).indexOf(currentDate) !== -1,\n      'between': isInRange(day),\n      'outside': day[1] !== date[1]\n    })\n\n    return className;\n  }\n\n  return (\n    <div className=\"calendar-days\">\n      {Object.entries(WEEK_DAYS).map(([k, v]) => (\n        <div key={v}>{v}</div>\n      ))}\n      {data.map(item => (\n        <button\n          key={item.toString()} \n          onClick={() => handleClick(item)} \n          className={btnClass(item)}\n        >\n          {item[2]}\n        </button>\n      ))}\n    </div>\n  )\n}","import React from 'react';\n\nimport calendarHelper, {\n  CALENDAR_MONTHS,\n  getDateArray,\n  getNextMonth,\n  getPreviousMonth\n} from '../../utils/calendarHelper';\nimport Chevron from '../Chevron';\nimport CalendarDays from './CalendarDays';\nimport './Calendar.css';\n\nconst Calendar = ({ handleClick, selectedDates }) => {\n\n  const today = new Date();\n  const [calendarData, setCalendarData] = React.useState(calendarHelper());\n  const [date, setNewDate] = React.useState(getDateArray(today));\n  // const [dayDiff, setDayDiff] = React.useState(0);\n  // const [selectedDates, setselectedDates] = React.useState([])\n  const [year, month] = date;\n\n  const gotoNextMonth = () => {\n    const nextMonth = getNextMonth(new Date([year, month]));\n    setNewDate([nextMonth.year, nextMonth.month, 1])\n  }\n\n  const gotoPrevMonth = () => {\n    const prevMonth = getPreviousMonth(new Date([year, month]));\n    setNewDate([prevMonth.year, prevMonth.month, 1])\n  }\n\n  React.useEffect(() => {\n    setCalendarData(calendarHelper(new Date(date)))\n  }, [date])\n\n  return (\n    <div className=\"calendar\">\n\t\t\t<div className=\"calendar-month\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"prev-month\"\n\t\t\t\t\tonClick={gotoPrevMonth}\n\t\t\t\t>\n\t\t\t\t\t<Chevron left />\n\t\t\t\t</button>\n\t\t\t\t{Object.keys(CALENDAR_MONTHS)[month - 1]} {year}\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"next-month\"\n\t\t\t\t\tonClick={gotoNextMonth}\n\t\t\t\t>\n\t\t\t\t\t<Chevron right />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<CalendarDays\n\t\t\t\tdate={date}\n\t\t\t\tdata={calendarData} \n\t\t\t\thandleClick={handleClick} \n\t\t\t\tselectedDates={selectedDates}\n\t\t\t/>\n\t\t</div>\n  )\n}\n\nexport default Calendar","import React from 'react';\n\nimport './DatePicker.css';\n\nimport {\n  getDateArray,\n  isBeforeDay,\n  dateDiff,\n  getDateISO,\n  isLeapYear\n} from '../../utils/calendarHelper';\n\nimport FactForDate from '../FactForDate';\n\nimport Calendar from '../Calendar';\n\nexport default () => {\n\n  const [fromDate, setFromDate] = React.useState('');\n  const [toDate, setToDate] = React.useState('');\n  const [calendarOpen, setCalendarOpen] = React.useState(false)\n  const [selectedDates, setselectedDates] = React.useState([])\n  const [dayDiff, setDayDiff] = React.useState(0);\n\n  const handleClick = date => {\n    const datesSet = selectedDates.length === 2;\n    const newDate = new Date(date);\n    if (!selectedDates[0] || datesSet) {\n      setselectedDates([newDate]);\n      setFromDate(getDateISO(new Date(date)))\n    } else {\n      if (isBeforeDay(newDate, selectedDates[0])) {\n        if (datesSet) {\n          setselectedDates([newDate, selectedDates[1]]);\n          setFromDate(getDateISO(new Date(date)))\n        } else {\n          setselectedDates([newDate]);\n          setFromDate(getDateISO(new Date(date)))\n        }\n      } else {\n        setselectedDates([selectedDates[0], newDate])\n        setToDate(getDateISO(new Date(date)));\n        setDayDiff(Math.round(dateDiff(newDate, selectedDates[0]) / (1000 * 3600 * 24)));\n      }\n    }\n  }\n\n  const leapYear = selectedDates.length === 2 &&\n    selectedDates.some(date => isLeapYear(getDateArray(date)[0]))\n\n  const getCertainDays = (days, date1, date2) => {\n    const ndays = 1 + Math.round((date2 - date1) / (24 * 3600 * 1000));\n    const sum = (a, b) => a + Math.floor((ndays + (date1.getDay() + 6 - b) % 7) / 7);\n    return days.reduce(sum, 0);\n  }\n\n  return (\n    <div className=\"date-picker\">\n\t\t\t<label htmlFor=\"from\">From: </label>\n\t\t\t<input \n\t\t\t\ttype=\"date\" \n\t\t\t\tvalue={fromDate} \n\t\t\t\treadOnly\n\t\t\t\tonFocus={() => setCalendarOpen(true)}\n\t\t\t/>\n\t\t\t&nbsp;\n\t\t\t<label htmlFor=\"from\">To: </label>\n\t\t\t<input \n\t\t\t\ttype=\"date\" \n\t\t\t\tvalue={toDate} \n\t\t\t\treadOnly\n\t\t\t\tonFocus={() => setCalendarOpen(true)}\n\t\t\t/>\n\t\t\t{calendarOpen &&\n\t\t\t\t<React.Fragment>\n\t\t\t\t<Calendar \n\t\t\t\t\thandleClick={handleClick} \n\t\t\t\t\tselectedDates={selectedDates} \n\t\t\t\t\tfromDate={fromDate}\n\t\t\t\t/>\n\t\t\t\t<p>Days in range: {dayDiff}</p> \n\t\t\t\t<p>Selected dates in leap year {leapYear ? 'Yes' : 'No'}</p>\n\t\t\t\t<p>Mondays in range: {getCertainDays([1],new Date(selectedDates[0]),new Date(selectedDates[1]))}</p>\n\t\t\t\t<FactForDate fromDate={fromDate} />\n\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t</div>\n  )\n}","import React from 'react';\nimport DatePicker from './components/DatePicker' \n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <h1>React Date Picker</h1>\n      <DatePicker />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}